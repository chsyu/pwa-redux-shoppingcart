{"ast":null,"code":"import { BEGIN_LOGIN_REQUEST, SUCCESS_LOGIN_REQUEST, FAIL_LOGIN_REQUEST, BEGIN_REGISTER_REQUEST, SUCCESS_REGISTER_REQUEST, FAIL_REGISTER_REQUEST, BEGIN_UPDATE_USERINFO, SUCCESS_UPDATE_USERINFO, FAIL_UPDATE_USERINFO, LOGOUT_REQUEST, REMEMBER_LOGIN } from \"../utils/constants\";\nimport { signInWithEmailPassword, registerWithEmailPassword, updateProfile } from \"../api\";\nexport const login = userInfo => async dispatch => {\n  dispatch({\n    type: BEGIN_LOGIN_REQUEST\n  });\n\n  try {\n    const res = await signInWithEmailPassword(userInfo.email, userInfo.password);\n    console.log(\"after login ...\");\n    console.log(res);\n\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_LOGIN_REQUEST,\n        payload: res.user\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_LOGIN_REQUEST,\n        payload: `${res.status} error!\n        ${res.detail}`\n      });\n      return null;\n    }\n  } catch (e) {\n    console.log(e);\n    dispatch({\n      type: FAIL_LOGIN_REQUEST,\n      payload: e\n    });\n    console.log(e);\n    return null;\n  }\n};\nexport const register = userInfo => async dispatch => {\n  dispatch({\n    type: BEGIN_REGISTER_REQUEST\n  });\n\n  try {\n    const res = await registerWithEmailPassword(userInfo.email, userInfo.password, userInfo.username);\n\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_REGISTER_REQUEST,\n        payload: res.user\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_REGISTER_REQUEST,\n        payload: `${res.status} error!\n        ${res.detail}`\n      });\n      return null;\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_REGISTER_REQUEST,\n      payload: e\n    });\n    console.log(e);\n    return null;\n  }\n};\nexport const rememberLoginUser = remember => dispatch => {\n  dispatch({\n    type: REMEMBER_LOGIN,\n    payload: remember\n  });\n};\nexport const updateUserInfo = userInfo => async dispatch => {\n  dispatch({\n    type: BEGIN_UPDATE_USERINFO\n  });\n\n  try {\n    const res = await updateProfile(userInfo.username, userInfo.password, userInfo.address || \"\", userInfo.tel || \"\", userInfo.access_token, userInfo.user_id);\n\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_UPDATE_USERINFO,\n        payload: res.user\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_UPDATE_USERINFO,\n        payload: `${res.status} error!\n        ${res.detail}`\n      });\n      return null;\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_UPDATE_USERINFO,\n      payload: e\n    });\n    console.log(e);\n    return null;\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n  localStorage.removeItem(\"userInfo\");\n};","map":{"version":3,"sources":["/Users/chi-shanyu/Desktop/36-PWAShoppingCart/src/actions/userActions.js"],"names":["BEGIN_LOGIN_REQUEST","SUCCESS_LOGIN_REQUEST","FAIL_LOGIN_REQUEST","BEGIN_REGISTER_REQUEST","SUCCESS_REGISTER_REQUEST","FAIL_REGISTER_REQUEST","BEGIN_UPDATE_USERINFO","SUCCESS_UPDATE_USERINFO","FAIL_UPDATE_USERINFO","LOGOUT_REQUEST","REMEMBER_LOGIN","signInWithEmailPassword","registerWithEmailPassword","updateProfile","login","userInfo","dispatch","type","res","email","password","console","log","status","payload","user","localStorage","setItem","JSON","stringify","detail","e","register","username","rememberLoginUser","remember","updateUserInfo","address","tel","access_token","user_id","logout","removeItem"],"mappings":"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","sourcesContent":["import {\n  BEGIN_LOGIN_REQUEST,\n  SUCCESS_LOGIN_REQUEST,\n  FAIL_LOGIN_REQUEST,\n  BEGIN_REGISTER_REQUEST,\n  SUCCESS_REGISTER_REQUEST,\n  FAIL_REGISTER_REQUEST,\n  BEGIN_UPDATE_USERINFO,\n  SUCCESS_UPDATE_USERINFO,\n  FAIL_UPDATE_USERINFO,\n  LOGOUT_REQUEST,\n  REMEMBER_LOGIN,\n} from \"../utils/constants\";\nimport {\n  signInWithEmailPassword,\n  registerWithEmailPassword,\n  updateProfile,\n} from \"../api\";\n\nexport const login = (userInfo) => async (dispatch) => {\n  dispatch({ type: BEGIN_LOGIN_REQUEST });\n  try {\n    const res = await signInWithEmailPassword(\n      userInfo.email,\n      userInfo.password\n    );\n    console.log(\"after login ...\");\n    console.log(res);\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_LOGIN_REQUEST,\n        payload: res.user,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_LOGIN_REQUEST,\n        payload: `${res.status} error!\n        ${res.detail}`,\n      });\n      return null;\n    }\n  } catch (e) {\n    console.log(e);\n    dispatch({\n      type: FAIL_LOGIN_REQUEST,\n      payload: e,\n    });\n    console.log(e);\n    return null;\n  }\n};\n\nexport const register = (userInfo) => async (dispatch) => {\n  dispatch({ type: BEGIN_REGISTER_REQUEST });\n  try {\n    const res = await registerWithEmailPassword(\n      userInfo.email,\n      userInfo.password,\n      userInfo.username\n    );\n\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_REGISTER_REQUEST,\n        payload: res.user,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_REGISTER_REQUEST,\n        payload: `${res.status} error!\n        ${res.detail}`,\n      });\n      return null;\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_REGISTER_REQUEST,\n      payload: e,\n    });\n    console.log(e);\n    return null;\n  }\n};\n\nexport const rememberLoginUser = (remember) => (dispatch) => {\n  dispatch({\n    type: REMEMBER_LOGIN,\n    payload: remember,\n  });\n};\n\nexport const updateUserInfo = (userInfo) => async (dispatch) => {\n  dispatch({ type: BEGIN_UPDATE_USERINFO });\n  try {\n    const res = await updateProfile(\n      userInfo.username,\n      userInfo.password,\n      userInfo.address || \"\",\n      userInfo.tel || \"\",\n      userInfo.access_token,\n      userInfo.user_id\n    );\n\n    if (res.status === 200) {\n      dispatch({\n        type: SUCCESS_UPDATE_USERINFO,\n        payload: res.user,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.user));\n      return res.user;\n    } else {\n      dispatch({\n        type: FAIL_UPDATE_USERINFO,\n        payload: `${res.status} error!\n        ${res.detail}`,\n      });\n      return null;\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_UPDATE_USERINFO,\n      payload: e,\n    });\n    console.log(e);\n    return null;\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: LOGOUT_REQUEST });\n  localStorage.removeItem(\"userInfo\");\n};\n\n\n"]},"metadata":{},"sourceType":"module"}