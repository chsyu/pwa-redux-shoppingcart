{"ast":null,"code":"import { SET_PAGE_TITLE, SET_PAGE_CONTENT, SET_NAVBAR_ACTIVEITEM, SET_PRODUCT_DETAIL, BEGIN_PRODUCTS_REQUEST, SUCCESS_PRODUCTS_REQUEST, FAIL_PRODUCTS_REQUEST } from \"../utils/constants\";\nimport { getProducts, getProductById } from \"../api\";\nexport const setProductDetail = (productId, qty) => async dispatch => {\n  dispatch({\n    type: BEGIN_PRODUCTS_REQUEST\n  });\n\n  try {\n    const product = await getProductById(productId);\n    if (qty === 0) dispatch({\n      type: SET_PRODUCT_DETAIL,\n      payload: {\n        product\n      }\n    });else dispatch({\n      type: SET_PRODUCT_DETAIL,\n      payload: {\n        product,\n        qty\n      }\n    });\n    dispatch({\n      type: SUCCESS_PRODUCTS_REQUEST\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FAIL_PRODUCTS_REQUEST,\n      payload: error\n    });\n  }\n};\nexport const setPage = (url, title) => async dispatch => {\n  let products = [];\n  dispatch({\n    type: BEGIN_PRODUCTS_REQUEST\n  });\n  dispatch({\n    type: SET_PAGE_TITLE,\n    payload: title\n  });\n\n  try {\n    products = await getProducts(url);\n    dispatch({\n      type: SET_PAGE_CONTENT,\n      payload: {\n        title,\n        products\n      }\n    });\n    dispatch({\n      type: SET_NAVBAR_ACTIVEITEM,\n      payload: url\n    });\n    dispatch({\n      type: SUCCESS_PRODUCTS_REQUEST\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FAIL_PRODUCTS_REQUEST,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chi-shanyu/Desktop/36-PWAShoppingCart/src/actions/productActions.js"],"names":["SET_PAGE_TITLE","SET_PAGE_CONTENT","SET_NAVBAR_ACTIVEITEM","SET_PRODUCT_DETAIL","BEGIN_PRODUCTS_REQUEST","SUCCESS_PRODUCTS_REQUEST","FAIL_PRODUCTS_REQUEST","getProducts","getProductById","setProductDetail","productId","qty","dispatch","type","product","payload","error","console","log","setPage","url","title","products"],"mappings":"AAAA,SACEA,cADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,sBALF,EAMEC,wBANF,EAOEC,qBAPF,QAQO,oBARP;AASA,SACEC,WADF,EAEEC,cAFF,QAGO,QAHP;AAMA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,MAAOC,QAAP,IAAoB;AACtEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMU,OAAO,GAAG,MAAMN,cAAc,CAACE,SAAD,CAApC;AACA,QAAIC,GAAG,KAAK,CAAZ,EACEC,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,kBADC;AAEPY,MAAAA,OAAO,EAAE;AACPD,QAAAA;AADO;AAFF,KAAD,CAAR,CADF,KAQEF,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,kBADC;AAEPY,MAAAA,OAAO,EAAE;AACPD,QAAAA,OADO;AAEPH,QAAAA;AAFO;AAFF,KAAD,CAAR;AAOFC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD,GAlBD,CAkBE,OAAOW,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,qBAAR;AAA+BS,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD;AACF,CAxBM;AA0BP,OAAO,MAAMG,OAAO,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB,MAAOT,QAAP,IAAoB;AACzD,MAAIU,QAAQ,GAAG,EAAf;AACAV,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACAQ,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEb,cADC;AAEPe,IAAAA,OAAO,EAAEM;AAFF,GAAD,CAAR;;AAIA,MAAI;AACFC,IAAAA,QAAQ,GAAG,MAAMf,WAAW,CAACa,GAAD,CAA5B;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,gBADC;AAEPc,MAAAA,OAAO,EAAE;AAAEM,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAFF,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,qBADC;AAEPa,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAIAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD,GAXD,CAWE,OAAOW,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,qBAAR;AAA+BS,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD;AACF,CAtBM","sourcesContent":["import {\n  SET_PAGE_TITLE,\n  SET_PAGE_CONTENT,\n  SET_NAVBAR_ACTIVEITEM,\n  SET_PRODUCT_DETAIL,\n  BEGIN_PRODUCTS_REQUEST,\n  SUCCESS_PRODUCTS_REQUEST,\n  FAIL_PRODUCTS_REQUEST,\n} from \"../utils/constants\";\nimport {\n  getProducts,\n  getProductById,\n} from \"../api\";\n\n\nexport const setProductDetail = (productId, qty) => async (dispatch) => {\n  dispatch({ type: BEGIN_PRODUCTS_REQUEST });\n  try {\n    const product = await getProductById(productId);\n    if (qty === 0)\n      dispatch({\n        type: SET_PRODUCT_DETAIL,\n        payload: {\n          product,\n        },\n      });\n    else\n      dispatch({\n        type: SET_PRODUCT_DETAIL,\n        payload: {\n          product,\n          qty,\n        },\n      });\n    dispatch({ type: SUCCESS_PRODUCTS_REQUEST });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: FAIL_PRODUCTS_REQUEST, payload: error });\n  }\n};\n\nexport const setPage = (url, title) => async (dispatch) => {\n  let products = [];\n  dispatch({ type: BEGIN_PRODUCTS_REQUEST });\n  dispatch({\n    type: SET_PAGE_TITLE,\n    payload: title,\n  });\n  try {\n    products = await getProducts(url);\n    dispatch({\n      type: SET_PAGE_CONTENT,\n      payload: { title, products },\n    });\n    dispatch({\n      type: SET_NAVBAR_ACTIVEITEM,\n      payload: url,\n    });\n    dispatch({ type: SUCCESS_PRODUCTS_REQUEST });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: FAIL_PRODUCTS_REQUEST, payload: error });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}