{"ast":null,"code":"/* eslint-disable no-restricted-globals */ // This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\nimport{clientsClaim}from'workbox-core';import{ExpirationPlugin}from'workbox-expiration';import{precacheAndRoute,createHandlerBoundToURL}from'workbox-precaching';import{registerRoute}from'workbox-routing';import{StaleWhileRevalidate,CacheFirst}from'workbox-strategies';clientsClaim();// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nvar fileExtensionRegexp=new RegExp('/[^/?]+\\\\.[^/]+$');registerRoute(// Return false to exempt requests from being fulfilled by index.html.\nfunction(_ref){var request=_ref.request,url=_ref.url;// If this isn't a navigation, skip.\nif(request.mode!=='navigate'){return false;}// If this is a URL that starts with /_, skip.\nif(url.pathname.startsWith('/_')){return false;}// If this looks like a URL for a resource, because it contains // a file extension, skip.\nif(url.pathname.match(fileExtensionRegexp)){return false;}// Return true to signal that we want to use the handler.\nreturn true;},createHandlerBoundToURL(process.env.PUBLIC_URL+'/index.html'));// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(new RegExp(\".(png|svg|jpg|jpeg|ico)$\"),new CacheFirst({cacheName:\"cache-images\",plugins:[new ExpirationPlugin({maxAgeSeconds:60*60,maxEntries:50,purgeOnQuotaError:true})]}));registerRoute(new RegExp(\"https://fastapi-heroku-2021.herokuapp.com/api/v1/products\"),new StaleWhileRevalidate({cacheName:\"cache-productsAPI\",plugins:[new ExpirationPlugin({maxAgeSeconds:60*60,maxEntries:50,purgeOnQuotaError:true})]}));// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message',function(event){if(event.data&&event.data.type==='SKIP_WAITING'){self.skipWaiting();}});// Any other custom service worker logic can go here.","map":{"version":3,"sources":["/Users/chi-shanyu/Desktop/36-PWAShoppingCart/src/service-worker.js"],"names":["clientsClaim","ExpirationPlugin","precacheAndRoute","createHandlerBoundToURL","registerRoute","StaleWhileRevalidate","CacheFirst","self","__WB_MANIFEST","fileExtensionRegexp","RegExp","request","url","mode","pathname","startsWith","match","process","env","PUBLIC_URL","cacheName","plugins","maxAgeSeconds","maxEntries","purgeOnQuotaError","addEventListener","event","data","type","skipWaiting"],"mappings":"AAAA,0C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAASA,YAAT,KAA6B,cAA7B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,gBAAT,CAA2BC,uBAA3B,KAA0D,oBAA1D,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,oBAAT,CAA+BC,UAA/B,KAAiD,oBAAjD,CAEAN,YAAY,GAEZ;AACA;AACA;AACA;AACAE,gBAAgB,CAACK,IAAI,CAACC,aAAN,CAAhB,CAEA;AACA;AACA;AACA,GAAMC,CAAAA,mBAAmB,CAAG,GAAIC,CAAAA,MAAJ,CAAW,kBAAX,CAA5B,CACAN,aAAa,CACX;AACA,cAAsB,IAAnBO,CAAAA,OAAmB,MAAnBA,OAAmB,CAAVC,GAAU,MAAVA,GAAU,CACpB;AACA,GAAID,OAAO,CAACE,IAAR,GAAiB,UAArB,CAAiC,CAC/B,MAAO,MAAP,CACD,CAAC;AAEF,GAAID,GAAG,CAACE,QAAJ,CAAaC,UAAb,CAAwB,IAAxB,CAAJ,CAAmC,CACjC,MAAO,MAAP,CACD,CAAC;AAEF,GAAIH,GAAG,CAACE,QAAJ,CAAaE,KAAb,CAAmBP,mBAAnB,CAAJ,CAA6C,CAC3C,MAAO,MAAP,CACD,CAAC;AAEF,MAAO,KAAP,CACD,CAjBU,CAkBXN,uBAAuB,CAACc,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyB,aAA1B,CAlBZ,CAAb,CAqBA;AACA;AACAf,aAAa,CACX,GAAIM,CAAAA,MAAJ,CAAW,0BAAX,CADW,CAEX,GAAIJ,CAAAA,UAAJ,CAAe,CACbc,SAAS,CAAE,cADE,CAEbC,OAAO,CAAE,CACP,GAAIpB,CAAAA,gBAAJ,CAAqB,CACnBqB,aAAa,CAAE,GAAK,EADD,CAEnBC,UAAU,CAAE,EAFO,CAGnBC,iBAAiB,CAAE,IAHA,CAArB,CADO,CAFI,CAAf,CAFW,CAAb,CAcApB,aAAa,CACX,GAAIM,CAAAA,MAAJ,CAAW,2DAAX,CADW,CAEX,GAAIL,CAAAA,oBAAJ,CAAyB,CACvBe,SAAS,CAAE,mBADY,CAEvBC,OAAO,CAAE,CACP,GAAIpB,CAAAA,gBAAJ,CAAqB,CACnBqB,aAAa,CAAE,GAAK,EADD,CAEnBC,UAAU,CAAE,EAFO,CAGnBC,iBAAiB,CAAE,IAHA,CAArB,CADO,CAFc,CAAzB,CAFW,CAAb,CAcA;AACA;AACAjB,IAAI,CAACkB,gBAAL,CAAsB,SAAtB,CAAiC,SAACC,KAAD,CAAW,CAC1C,GAAIA,KAAK,CAACC,IAAN,EAAcD,KAAK,CAACC,IAAN,CAAWC,IAAX,GAAoB,cAAtC,CAAsD,CACpDrB,IAAI,CAACsB,WAAL,GACD,CACF,CAJD,EAMA","sourcesContent":["/* eslint-disable no-restricted-globals */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from 'workbox-core';\nimport { ExpirationPlugin } from 'workbox-expiration';\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate, CacheFirst } from 'workbox-strategies';\n\nclientsClaim();\n\n// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== 'navigate') {\n      return false;\n    } // If this is a URL that starts with /_, skip.\n\n    if (url.pathname.startsWith('/_')) {\n      return false;\n    } // If this looks like a URL for a resource, because it contains // a file extension, skip.\n\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    } // Return true to signal that we want to use the handler.\n\n    return true;\n  },\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\n);\n\n// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(\n  new RegExp(\".(png|svg|jpg|jpeg|ico)$\"),\n  new CacheFirst({\n    cacheName: \"cache-images\",\n    plugins: [\n      new ExpirationPlugin({\n        maxAgeSeconds: 60 * 60,\n        maxEntries: 50,\n        purgeOnQuotaError: true,\n      }),\n    ],\n  })\n);\n\nregisterRoute(\n  new RegExp(\"https://fastapi-heroku-2021.herokuapp.com/api/v1/products\"),\n  new StaleWhileRevalidate({\n    cacheName: \"cache-productsAPI\",\n    plugins: [\n      new ExpirationPlugin({\n        maxAgeSeconds: 60 * 60,\n        maxEntries: 50,\n        purgeOnQuotaError: true,\n      }),\n    ],\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n"]},"metadata":{},"sourceType":"module"}