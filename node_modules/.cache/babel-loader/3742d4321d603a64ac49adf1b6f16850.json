{"ast":null,"code":"var _jsxFileName = \"/Users/chi-shanyu/Desktop/36-PWAShoppingCart/src/components/OrderCard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport GooglePayButton from \"@google-pay/button-react\";\nimport { requestOrderDetail } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrderCard({\n  orderId\n}) {\n  _s();\n\n  const {\n    loading,\n    order\n  } = useSelector(state => state.orderDetail);\n  const {\n    orderItems\n  } = order;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n    style: {\n      fontSize: 80,\n      color: \"#8183ff\"\n    },\n    spin: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  const paymentRequest = {\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [{\n      type: \"CARD\",\n      parameters: {\n        allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n        allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\n      },\n      tokenizationSpecification: {\n        type: \"PAYMENT_GATEWAY\",\n        parameters: {\n          gateway: \"example\"\n        }\n      }\n    }],\n    merchantInfo: {\n      merchantId: \"12345678901234567890\",\n      merchantName: \"Demo Merchant\"\n    },\n    transactionInfo: {\n      totalPriceStatus: \"FINAL\",\n      totalPriceLabel: \"Total\",\n      totalPrice: String(order.totalPrice),\n      currencyCode: \"USD\",\n      countryCode: \"US\"\n    }\n  };\n  useEffect(() => {\n    dispatch(requestOrderDetail(orderId));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-wrap\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [24, 24],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20,\n          offset: 2\n        },\n        lg: {\n          span: 13,\n          offset: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Shipping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), \" \", order.shippingAddress.fullName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), \" \", order.shippingAddress.address, \",\", order.shippingAddress.city, \", \", order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), \" \", order.paymentMethod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Order Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"cart-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-name\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-qty\",\n                children: [\"Qty: \", item.qty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item-end\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-price\",\n                children: [\"$\", item.price * item.qty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-total-price-wrap\",\n            children: [\"Total\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-total-price\",\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20,\n          offset: 2\n        },\n        lg: {\n          span: 7,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Order Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.itemsPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.shippingPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Tax\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.taxPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Order Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"$\", order.totalPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GooglePayButton, {\n            environment: \"TEST\",\n            buttonColor: \"black\",\n            paymentRequest: paymentRequest,\n            onLoadPaymentData: paymentRequest => {\n              console.log(\"load payment data\", paymentRequest);\n              history.push(\"/\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(OrderCard, \"4lS3ISrWCwdHQgcj8YIa1Qtay44=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = OrderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCard\");","map":{"version":3,"sources":["/Users/chi-shanyu/Desktop/36-PWAShoppingCart/src/components/OrderCard.js"],"names":["useEffect","useDispatch","useSelector","useHistory","Row","Col","Spin","LoadingOutlined","GooglePayButton","requestOrderDetail","OrderCard","orderId","loading","order","state","orderDetail","orderItems","dispatch","history","antIcon","fontSize","color","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","String","currencyCode","countryCode","span","offset","shippingAddress","fullName","address","city","postalCode","country","paymentMethod","length","map","item","image","name","qty","price","id","itemsPrice","shippingPrice","taxPrice","console","log","push"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport GooglePayButton from \"@google-pay/button-react\";\nimport { requestOrderDetail } from \"../actions/orderActions\";\n\nexport default function OrderCard({ orderId }) {\n  const { loading, order } = useSelector((state) => state.orderDetail);\n\n  const { orderItems } = order;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const antIcon = (\n    <LoadingOutlined style={{ fontSize: 80, color: \"#8183ff\" }} spin />\n  );\n\n  const paymentRequest = {\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [\n      {\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: {\n            gateway: \"example\",\n          },\n        },\n      },\n    ],\n    merchantInfo: {\n      merchantId: \"12345678901234567890\",\n      merchantName: \"Demo Merchant\",\n    },\n    transactionInfo: {\n      totalPriceStatus: \"FINAL\",\n      totalPriceLabel: \"Total\",\n      totalPrice: String(order.totalPrice),\n      currencyCode: \"USD\",\n      countryCode: \"US\",\n    },\n  };\n\n  useEffect(() => {\n    dispatch(requestOrderDetail(orderId));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"spinner-wrap\">\n          <Spin indicator={antIcon} className=\"spinner\" />\n        </div>\n      ) : (\n        <Row gutter={[24, 24]}>\n          <Col xs={{ span: 20, offset: 2 }} lg={{ span: 13, offset: 2 }}>\n            <div className=\"card card-body\">\n              <h2 style={{ color: \"white\" }}>Shipping</h2>\n              <p>\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                <strong>Address: </strong> {order.shippingAddress.address},\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n                ,{order.shippingAddress.country}\n              </p>\n            </div>\n            <div className=\"card card-body\">\n              <h2 style={{ color: \"white\" }}>Payment</h2>\n              <p>\n                <strong>Method:</strong> {order.paymentMethod}\n              </p>\n            </div>\n            <div className=\"card card-body\">\n              <h2 style={{ color: \"white\" }}>Order Items</h2>\n              {orderItems.length === 0 ? (\n                <div>Cart is empty</div>\n              ) : (\n                orderItems.map((item) => (\n                  <li key={item.id} className=\"cart-item\">\n                    <div className=\"cart-image\">\n                      <img src={item.image} alt={item.name} />\n                    </div>\n                    <div className=\"cart-item-content\">\n                      <div className=\"cart-name\">{item.name}</div>\n                      <div className=\"product-qty\">Qty: {item.qty}</div>\n                    </div>\n                    <div className=\"cart-item-end\">\n                      <div className=\"cart-price\">${item.price * item.qty}</div>\n                    </div>\n                  </li>\n                ))\n              )}\n              <div className=\"cart-total-price-wrap\">\n                Total\n                <div className=\"cart-total-price\">${order.totalPrice}</div>\n              </div>\n            </div>\n          </Col>\n          <Col xs={{ span: 20, offset: 2 }} lg={{ span: 7, offset: 0 }}>\n            <div className=\"card card-body\">\n              <h2 style={{ color: \"white\" }}>Order Summary</h2>\n              <div className=\"row\">\n                <div>Items</div>\n                <div>${order.itemsPrice}</div>\n              </div>\n              <div className=\"row\">\n                <div>Shipping</div>\n                <div>${order.shippingPrice}</div>\n              </div>\n              <div className=\"row\">\n                <div>Tax</div>\n                <div>${order.taxPrice}</div>\n              </div>\n              <div className=\"row\">\n                <div>\n                  <strong> Order Total</strong>\n                </div>\n                <div>\n                  <strong>${order.totalPrice}</strong>\n                </div>\n              </div>\n              <GooglePayButton\n                environment=\"TEST\"\n                buttonColor=\"black\"\n                paymentRequest={paymentRequest}\n                onLoadPaymentData={(paymentRequest) => {\n                  console.log(\"load payment data\", paymentRequest);\n                  history.push(\"/\");\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}